<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>動漫風格轉換</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 min-h-screen flex flex-col items-center justify-center p-4">

  <div class="bg-white rounded-2xl shadow-xl p-6 w-full max-w-lg text-center">
    <h1 class="text-2xl font-bold mb-4">🎨 AI 動漫風格轉換</h1>

    <input
      type="file"
      accept="image/*"
      id="imageInput"
      class="mb-4 block w-full text-sm text-gray-500
             file:mr-4 file:py-2 file:px-4
             file:rounded-full file:border-0
             file:text-sm file:font-semibold
             file:bg-blue-500 file:text-white
             hover:file:bg-blue-600"
    />

    <div id="previewContainer" class="mb-4">
      <p class="font-medium text-gray-700 mb-1">原始圖片：</p>
      <img id="previewImage" src="" class="w-full rounded-lg shadow mb-4 hidden"/>
    </div>

    <button id="convertBtn"
            class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 disabled:opacity-50"
            disabled>
      🎬 開始轉換
    </button>

    <div id="resultContainer" class="mt-6 hidden">
      <p class="font-medium text-gray-700 mb-1">動漫風格結果：</p>
      <img id="resultImage" src="" class="w-full rounded-lg shadow"/>
    </div>
  </div>

  <script>
    const imageInput = document.getElementById("imageInput");
    const previewImage = document.getElementById("previewImage");
    const previewContainer = document.getElementById("previewContainer");
    const convertBtn = document.getElementById("convertBtn");
    const resultContainer = document.getElementById("resultContainer");
    const resultImage = document.getElementById("resultImage");

    let imageBase64 = "";

    imageInput.addEventListener("change", () => {
      const file = imageInput.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onloadend = () => {
          imageBase64 = reader.result;
          previewImage.src = imageBase64;
          previewImage.classList.remove("hidden");
          convertBtn.disabled = false;
        };
        reader.readAsDataURL(file);
      }
    });

    convertBtn.addEventListener("click", async () => {
      convertBtn.textContent = "轉換中...";
      convertBtn.disabled = true;
      resultContainer.classList.add("hidden");

      const rawBase64 = imageBase64.split(",")[1]; // 拿掉 data:image/png;base64, 開頭

      const response = await fetch("https://hf.space/embed/TencentARC/AnimeGANv2/api/predict", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ data: [rawBase64] }),
      });

      const result = await response.json();
      const animeImageUrl = result.data[0];

      resultImage.src = animeImageUrl;
      resultContainer.classList.remove("hidden");

      convertBtn.textContent = "🎬 再次轉換";
      convertBtn.disabled = false;
    });
  </script>
</body>
</html>
